package com.main

import com.app.rwm.model.Injury;
import com.app.rwm.model.TrainingPlan;
import com.app.rwm.enums.INJURY_TYPE;
import com.app.rwm.enums.INJURY_CATEGORY;

import java.time.Instant;
import java.time.temporal.ChronoUnit;

import java.util.ArrayList;

global ArrayList injuries;

rule "Injury severe broken leg"
	agenda-group "injury"
	when 
		$i : Injury(injuryType == INJURY_TYPE.BROKEN_LEG)
		$r : RunnerData(injuryCategory == INJURY_CATEGORY.NA || injuryCategory == INJURY_CATEGORY.MINOR_INJURY && injuryCategory != INJURY_CATEGORY.SEVERE_INJURY )
    then
    	System.out.println("SEVERE_INJURY and cancel preparation");
        $r.setInjuryCategory(INJURY_CATEGORY.SEVERE_INJURY);
        update($r);
end

rule "Injury severe more than 1 injury"
	agenda-group "injury"
	no-loop
	when 
		$r : RunnerData($id : id)
		accumulate (
			$rd : Injury(
				  runnerData.getId() == $id,
				  ChronoUnit.DAYS.between(Instant.now(), dateOfInjury) <= 84 //84 days - 12 weeks
				  		 ) from injuries,
				$count: collectList($rd)
			)
		eval ($count.size() >= 2)
	then
		System.out.println("More injuries");
        modify($r){setInjuryCategory(INJURY_CATEGORY.SEVERE_INJURY);}

end



rule "Cancel preparation if severe injury"//dodaj plan
	agenda-group "injury"
	lock-on-active
	when
		$r: RunnerData(injuryCategory == INJURY_CATEGORY.SEVERE_INJURY)
		$p: TrainingPlan()
	then
		System.out.println("Cancel the preparation");
		modify($p){setCanceledPreparation(true);}
end



rule "Injury minor"//radi
	agenda-group "injury"
	lock-on-active
	when 
		$r : RunnerData(injuryCategory == INJURY_CATEGORY.NA || injuryCategory == INJURY_CATEGORY.MINOR_INJURY )
		$i : Injury(injuryType == INJURY_TYPE.KNEE_PAIN || injuryType == INJURY_TYPE.ACHILLES_TENDINITIS)
    then
    	System.out.println("Normal");
        modify($r) {setInjuryCategory(INJURY_CATEGORY.MINOR_INJURY);}
end



